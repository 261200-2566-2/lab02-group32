Give a complete description of AirPurifier class:

1. ตัวแปรอินสแตนซ์ (Instance Variables):
   - `power` (boolean): สถานะการเปิดหรือปิดของเครื่องฟอกอากาศ (true คือเปิด, false คือปิด)
   - `mode` (String): โหมดการทำงานปัจจุบันของเครื่องฟอกอากาศ
   - `fanSpeed` (int): ความเร็วพัดลมของเครื่องฟอกอากาศ
   - `model` (String): รุ่นของเครื่องฟอกอากาศ
   - `serialNo` (String): เลขที่ซีเรียลของเครื่องฟอกอากาศ

2. ตัวแปรคลาส (Class Variables):
   - `mostPopularModel` (String): รุ่นที่ได้รับความนิยมมากที่สุด
   - `modelCount` (int): จำนวนรุ่นที่มีอยู่
   - `madeIn` (String): ประเทศที่ผลิต

3. เมธอดอินสแตนซ์ (Instance Methods):
   - `turnOn(int pm25)`: เปิดเครื่องฟอกอากาศและตั้งโหมดอัตโนมัติตามค่า PM2.5
   - `turnOff()`: ปิดเครื่องฟอกอากาศ
   - `showMode()`: แสดงโหมดการทำงานปัจจุบัน
   - `showAQI(int pm25)`: แสดงคุณภาพอากาศจากค่า PM2.5
   - `autoMode(int pm25)`: ตั้งโหมดอัตโนมัติตามค่า PM2.5
   - `powerfulMode()`: ตั้งโหมดพลังงานสูง
   - `sleepMode(int pm25)`: ตั้งโหมดนอนหลับตามค่า PM2.5
   - `setMode(int pm25, int nextMode)`: ตั้งโหมดการทำงานตามที่กำหนด
   - `showFanSpeed()`: แสดงความเร็วพัดลม

4. เมธอดคลาส (Class Methods):
   - `calMostPopularMode()`: คำนวณหาโหมดที่ได้รับความนิยมมากที่สุด (ไม่ได้ถูกกำหนดการทำงานในโค้ด)
   - `showModelCount()`: แสดงจำนวนรุ่น (ไม่ได้ถูกกำหนดการทำงานในโค้ด)
   - `thisModeCanBoughtIn()`: แสดงว่าโหมดใดที่สามารถซื้อได้ในประเทศไหน (ไม่ได้ถูกกำหนดการทำงานในโค้ด)

For each method proposed above ,how do you plan to implement it:

- `turnOn(int pm25)`: ต้องการค่า PM2.5 เป็นอินพุทเพื่อตั้งโหมดอัตโนมัติ, ไม่มีการรีเทิร์นค่า
- `turnOff()`: ไม่ต้องการอินพุท, ไม่มีการรีเทิร์นค่า
- `showMode()`: ไม่ต้องการอินพุท, ไม่มีการรีเทิร์นค่า
- `showAQI(int pm25)`: ต้องการค่า PM2.5 เพื่อแสดงคุณภาพอากาศ, ไม่มีการรีเทิร์นค่า
- `autoMode(int pm25)`: ต้องการค่า PM2.5 เพื่อตั้งค่าความเร็วพัดลม, รีเทิร์นโหมด "AUTO"
- `powerfulMode()`: ไม่ต้องการอินพุท, รีเทิร์นโหมด "POWERFUL"
- `sleepMode(int pm25)`: ต้องการค่า PM2.5 เพื่อตั้งโหมดนอนหลับ, รีเทิร์นโหมด "SLEEP" หรือไม่มีการรีเทิร์นถ้าคุณภาพอากาศแย่
- `setMode(int pm25, int nextMode)`: ต้องการค่า PM2.5 และค่า nextMode เพื่อตั้งโหมดการทำงาน, ไม่มีการรีเทิร์นค่า
- `showFanSpeed()`: ไม่ต้องการอินพุท, ไม่มีการรีเทิร์นค่า